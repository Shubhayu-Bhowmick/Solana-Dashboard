{"version":3,"sources":["webpack://CustomauthAdapter/webpack/bootstrap","webpack://CustomauthAdapter/external \"@web3auth/base\"","webpack://CustomauthAdapter/external \"@babel/runtime/helpers/defineProperty\"","webpack://CustomauthAdapter/external \"@toruslabs/customauth\"","webpack://CustomauthAdapter/external \"loglevel\"","webpack://CustomauthAdapter/./src/config.ts","webpack://CustomauthAdapter/./src/constants.ts","webpack://CustomauthAdapter/./src/memoryStore.ts","webpack://CustomauthAdapter/./src/utils.ts","webpack://CustomauthAdapter/./src/customAuthStore.ts","webpack://CustomauthAdapter/./src/customAuthAdapter.ts","webpack://CustomauthAdapter/./src/index.ts","webpack://CustomauthAdapter/external \"@web3auth/solana-provider\"","webpack://CustomauthAdapter/external \"@web3auth/ethereum-provider\"","webpack://CustomauthAdapter/external \"@toruslabs/openlogin-ed25519\""],"names":["getCustomAuthDefaultOptions","chainNamespace","chainId","adapterSettings","baseUrl","redirectPathName","uxMode","enableLogging","network","initSettings","skipInit","skipSw","skipPrefetch","chainConfig","getChainConfig","undefined","storeKey","MemoryStore","getItem","key","store","setItem","value","parseCustomAuthResult","redirectResult","result","method","userInfo","publicAddress","privateKey","pubKey","TORUS_METHOD","TRIGGER_LOGIN","TRIGGER_AGGREGATE_LOGIN","aggregateUserInfo","TRIGGER_AGGREGATE_HYBRID_LOGIN","singleLogin","aggregateLogins","Error","padStart","sessionStorageAvailable","storageAvailable","CustomAuthStore","constructor","storage","resetStore","error","getInstance","instance","window","sessionStorage","toJSON","currStore","getStore","JSON","stringify","parse","get","set","DEFAULT_CUSTOM_AUTH_RES","email","name","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","LOGIN","GOOGLE","CustomAuthAdapter","BaseAdapter","params","WALLET_ADAPTERS","CUSTOM_AUTH","ADAPTER_NAMESPACES","MULTICHAIN","ADAPTER_CATEGORY","IN_APP","CHAIN_NAMESPACES","EIP155","ADAPTER_STATUS","NOT_READY","loginSettings","WalletInitializationError","invalidParams","defaultOptions","currentChainNamespace","defaultChainIdConfig","rpcTarget","customAuthResult","provider","privKeyProvider","setChainConfig","customChainConfig","setAdapterSettings","status","READY","init","options","checkInitializationRequirements","customAuthInstance","CustomAuth","emit","ADAPTER_EVENTS","autoConnect","rehydrated","setupProvider","isRedirectResultAvailable","log","connect","checkConnectionRequirements","CONNECTING","adapter","ERRORED","WalletLoginError","connectionError","disconnect","cleanup","CONNECTED","notConnectedError","DISCONNECTED","getUserInfo","url","URL","location","href","hash","substring","queryParams","searchParams","forEach","Object","keys","length","notReady","getRedirectResult","replaceUrl","clearLoginDetails","_syncCustomAuthResult","SOLANA","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","finalPrivKey","loginProviderConfig","loginProvider","loginConfig","triggerLogin","args","triggerAggregateLogin","triggerHybridAggregateLogin","UX_MODE","POPUP","parsedResult","state","REDIRECT","debug","getED25519Key","sk","toString","reconnected"],"mappings":"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","file":"customauthAdapter.cjs.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".customauthAdapter.cjs.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonpCustomauthAdapter\"] = window[\"webpackJsonpCustomauthAdapter\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@toruslabs/customauth\");","module.exports = require(\"loglevel\");","import { ChainNamespaceType, getChainConfig } from \"@web3auth/base\";\n\nimport { CustomAuthAdapterOptions } from \"./interface\";\n\nexport const getCustomAuthDefaultOptions = (chainNamespace?: ChainNamespaceType, chainId?: number | string): Partial<CustomAuthAdapterOptions> => {\n  return {\n    adapterSettings: {\n      baseUrl: \"\",\n      redirectPathName: \"\",\n      uxMode: \"redirect\",\n      enableLogging: true,\n      network: \"mainnet\",\n    },\n    initSettings: {\n      skipInit: true,\n      skipSw: true,\n      skipPrefetch: true,\n    },\n    chainConfig: chainNamespace && chainId ? getChainConfig(chainNamespace, chainId) : undefined,\n  };\n};\n","export const storeKey = \"customauth-web3auth\";\n","import { IStore } from \"./IStore\";\n\nexport class MemoryStore implements IStore {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key];\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n","import {\n  LoginWindowResponse,\n  RedirectResult,\n  storageAvailable,\n  TORUS_METHOD,\n  TorusAggregateLoginResponse,\n  TorusHybridAggregateLoginResponse,\n  TorusKeyPub,\n  TorusLoginResponse,\n  TorusVerifierResponse,\n} from \"@toruslabs/customauth\";\n\nimport { CustomAuthResult } from \"./interface\";\n\nexport function parseCustomAuthResult(redirectResult: RedirectResult): CustomAuthResult {\n  const { result, method } = redirectResult;\n  let userInfo: TorusVerifierResponse & LoginWindowResponse;\n  let publicAddress: string;\n  let privateKey: string;\n  let pubKey: TorusKeyPub[\"pubKey\"];\n  if (method === TORUS_METHOD.TRIGGER_LOGIN) {\n    ({ userInfo, publicAddress, privateKey, pubKey } = result as TorusLoginResponse);\n  } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN) {\n    const { userInfo: aggregateUserInfo } = result as TorusAggregateLoginResponse;\n    ({ publicAddress, privateKey, pubKey } = result as TorusAggregateLoginResponse);\n    [userInfo] = aggregateUserInfo;\n  } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN) {\n    const { singleLogin, aggregateLogins } = result as TorusHybridAggregateLoginResponse;\n    ({ userInfo } = singleLogin);\n    [{ publicAddress, privateKey, pubKey }] = aggregateLogins;\n  } else {\n    throw new Error(\"Unsupported method type\");\n  }\n  return {\n    publicAddress,\n    privateKey: privateKey?.padStart(64, \"0\") || \"\",\n    ...userInfo,\n    pubKey,\n  };\n}\n\nexport const sessionStorageAvailable = storageAvailable(\"sessionStorage\");\n","import { storeKey } from \"./constants\";\nimport { IStore } from \"./IStore\";\nimport { MemoryStore } from \"./memoryStore\";\nimport { sessionStorageAvailable } from \"./utils\";\n\nexport default class CustomAuthStore {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: CustomAuthStore;\n\n  public storage: IStore;\n\n  private constructor(storage: IStore) {\n    this.storage = storage;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(): CustomAuthStore {\n    if (!this.instance) {\n      this.instance = new this(sessionStorageAvailable ? (window.sessionStorage as IStore) : new MemoryStore());\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(storeKey) || \"{}\");\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(storeKey) || \"{}\");\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n}\n","import CustomAuth, {\n  AggregateLoginParams,\n  CustomAuthArgs,\n  HybridAggregateLoginParams,\n  InitParams,\n  LOGIN,\n  SingleLoginParams,\n  TORUS_METHOD,\n  TorusAggregateLoginResponse,\n  TorusHybridAggregateLoginResponse,\n  TorusLoginResponse,\n  UX_MODE,\n} from \"@toruslabs/customauth\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport log from \"loglevel\";\n\nimport { getCustomAuthDefaultOptions } from \"./config\";\nimport CustomAuthStore from \"./customAuthStore\";\nimport type { CustomAuthAdapterOptions, CustomAuthResult, LoginSettings } from \"./interface\";\nimport { parseCustomAuthResult } from \"./utils\";\n\ntype PrivateKeyProvider = BaseProvider<BaseProviderConfig, BaseProviderState, string>;\n\ninterface LoginParams {\n  login_hint: string;\n  loginProvider: string;\n}\n\nconst DEFAULT_CUSTOM_AUTH_RES: CustomAuthResult = {\n  publicAddress: \"\",\n  privateKey: \"\",\n  email: \"\",\n  name: \"\",\n  profileImage: \"\",\n  aggregateVerifier: \"\",\n  verifier: \"\",\n  verifierId: \"\",\n  typeOfLogin: LOGIN.GOOGLE,\n};\n\nexport class CustomAuthAdapter extends BaseAdapter<LoginParams> {\n  readonly name: string = WALLET_ADAPTERS.CUSTOM_AUTH;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.MULTICHAIN;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.IN_APP;\n\n  // should be overridden in constructor or from setChainConfig function\n  // before calling init function.\n  public currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  public customAuthInstance: CustomAuth | null = null;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public readonly loginSettings: LoginSettings;\n\n  private adapterSettings: CustomAuthArgs | null = null;\n\n  private initSettings: InitParams;\n\n  private privKeyProvider: PrivateKeyProvider | null = null;\n\n  private store: CustomAuthStore;\n\n  private customAuthResult: CustomAuthResult = {\n    ...DEFAULT_CUSTOM_AUTH_RES,\n  };\n\n  private rehydrated = false;\n\n  constructor(params: CustomAuthAdapterOptions) {\n    super();\n    if (!params.loginSettings) {\n      throw WalletInitializationError.invalidParams(\"loginSettings is required for customAuth adapter\");\n    }\n    const defaultOptions = getCustomAuthDefaultOptions(params.chainConfig?.chainNamespace, params.chainConfig?.chainId);\n\n    const adapterSettings = { ...defaultOptions.adapterSettings, ...params.adapterSettings };\n    const loginSettings = { ...params.loginSettings };\n    const initSettings = { ...defaultOptions.initSettings, ...params.initSettings };\n\n    if (!adapterSettings.baseUrl) {\n      throw WalletInitializationError.invalidParams(\"baseUrl is required in adapter settings\");\n    }\n    if (!adapterSettings.redirectPathName) {\n      throw WalletInitializationError.invalidParams(\"redirectPathName is required in adapter settings\");\n    }\n    this.adapterSettings = adapterSettings as CustomAuthArgs;\n    this.loginSettings = loginSettings;\n    this.initSettings = initSettings;\n\n    // if no chainNamespace is passed then chain config should be set before calling init\n    if (params.chainConfig?.chainNamespace) {\n      this.currentChainNamespace = params.chainConfig?.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = { ...defaultChainIdConfig, ...params?.chainConfig };\n      if (!this.chainConfig.rpcTarget) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n    // syncing storage with custom auth result.\n    this.store = CustomAuthStore.getInstance();\n    this.customAuthResult = { ...this.customAuthResult, ...this.store.getStore() };\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.privKeyProvider?.provider || null;\n  }\n\n  // should be called only before initialization.\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings: CustomAuthArgs): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    const defaultOptions = getCustomAuthDefaultOptions();\n    this.adapterSettings = { ...defaultOptions.adapterSettings, ...adapterSettings };\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.adapterSettings) throw WalletInitializationError.invalidParams(\"adapterSettings is required for customAuth adapter\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required for customAuth adapter\");\n    this.customAuthInstance = new CustomAuth(this.adapterSettings);\n    await this.customAuthInstance.init(this.initSettings);\n\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.CUSTOM_AUTH);\n\n    try {\n      if (options.autoConnect) this.rehydrated = true;\n      // if adapter is already connected and cached then we can proceed to setup the provider\n      if (this.customAuthResult.privateKey && options.autoConnect) {\n        await this.setupProvider();\n      }\n      // if adapter is not connected then we should check if url contains redirect login result\n      if (!this.customAuthResult.privateKey && (await this.isRedirectResultAvailable())) {\n        await this.setupProvider();\n      }\n    } catch (error) {\n      log.error(\"Failed to parse direct auth result\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params?: LoginParams): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { ...params, adapter: WALLET_ADAPTERS.CUSTOM_AUTH });\n    try {\n      await this.setupProvider(params);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      log.error(\"Error while connecting to custom auth\", error);\n      throw WalletLoginError.connectionError(\"Failed to login with CustomAuth\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    this.store.resetStore();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.customAuthInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.customAuthResult = {\n      ...DEFAULT_CUSTOM_AUTH_RES,\n    };\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    return {\n      email: this.customAuthResult.email,\n      name: this.customAuthResult.name,\n      profileImage: this.customAuthResult.profileImage,\n      verifier: this.customAuthResult.verifier,\n      verifierId: this.customAuthResult.verifierId,\n    };\n  }\n\n  private async isRedirectResultAvailable(): Promise<boolean> {\n    const url = new URL(window.location.href);\n    const hash = url.hash.substring(1);\n    const queryParams: Record<string, string> = {};\n    url.searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n    if (!hash && Object.keys(queryParams).length === 0) {\n      return false;\n    }\n    if (!this.customAuthInstance) throw WalletInitializationError.notReady(\"customAuthInstance is not ready\");\n    const redirectResult = await this.customAuthInstance.getRedirectResult({\n      replaceUrl: true,\n      clearLoginDetails: true,\n    });\n    if (redirectResult.error) {\n      log.error(\"Failed to parse custom auth result\", redirectResult.error);\n      if (redirectResult.error !== \"Unsupported method type\") {\n        throw WalletLoginError.connectionError(redirectResult.error);\n      }\n      return false;\n    }\n    this.customAuthResult = parseCustomAuthResult(redirectResult);\n    this._syncCustomAuthResult(this.customAuthResult as Record<string, any>);\n    return !!this.customAuthResult.privateKey;\n  }\n\n  private async setupProvider(params?: LoginParams): Promise<void> {\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required for customAuth adapter\");\n    if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      const { SolanaPrivateKeyProvider } = await import(\"@web3auth/solana-provider\");\n      this.privKeyProvider = new SolanaPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.EIP155) {\n      const { EthereumPrivateKeyProvider } = await import(\"@web3auth/ethereum-provider\");\n      this.privKeyProvider = new EthereumPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else {\n      throw new Error(`Invalid chainNamespace: ${this.currentChainNamespace} found while connecting to wallet`);\n    }\n\n    if (!this.customAuthInstance) throw WalletInitializationError.notReady(\"customAuthInstance is not ready\");\n\n    let finalPrivKey = this.customAuthResult?.privateKey;\n\n    if (!finalPrivKey && params) {\n      if (!this.loginSettings?.loginProviderConfig?.[params.loginProvider]) {\n        throw new Error(`Login provider ${params.loginProvider} settings not found in loginSettings`);\n      }\n      const loginConfig = this.loginSettings?.loginProviderConfig?.[params.loginProvider];\n      let result: TorusLoginResponse | TorusHybridAggregateLoginResponse | TorusAggregateLoginResponse;\n      if (loginConfig.method === TORUS_METHOD.TRIGGER_LOGIN) {\n        result = await this.customAuthInstance.triggerLogin(loginConfig.args as SingleLoginParams);\n      } else if (loginConfig.method === TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN) {\n        result = await this.customAuthInstance.triggerAggregateLogin(loginConfig.args as AggregateLoginParams);\n      } else if (loginConfig.method === TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN) {\n        result = await this.customAuthInstance.triggerHybridAggregateLogin(loginConfig.args as HybridAggregateLoginParams);\n      } else {\n        throw WalletLoginError.connectionError(`Unsupported CustomAuth method type: ${loginConfig.method}`);\n      }\n\n      if (this.adapterSettings?.uxMode === UX_MODE.POPUP) {\n        const parsedResult = parseCustomAuthResult({ method: loginConfig.method, result, state: {}, args: loginConfig.args });\n        this._syncCustomAuthResult(parsedResult as Record<string, any>);\n        finalPrivKey = parsedResult.privateKey;\n      } else if (this.adapterSettings?.uxMode === UX_MODE.REDIRECT) {\n        return;\n      }\n    }\n    log.debug(\"final private key\", finalPrivKey);\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        const { getED25519Key } = await import(\"@toruslabs/openlogin-ed25519\");\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.CUSTOM_AUTH, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    } else {\n      throw WalletLoginError.connectionError(\"Failed to login with CustomAuth\");\n    }\n  }\n\n  private _syncCustomAuthResult(result?: Record<string, unknown>): void {\n    if (result) {\n      Object.keys(result).forEach((key: string) => {\n        if (typeof result[key] === \"string\") {\n          this.store.set(key, result[key] as string);\n        }\n      });\n      this.customAuthResult = { ...this.customAuthResult, ...result };\n    }\n  }\n}\n","export * from \"./config\";\nexport * from \"./customAuthAdapter\";\nexport * from \"./interface\";\n","module.exports = require(\"@web3auth/solana-provider\");","module.exports = require(\"@web3auth/ethereum-provider\");","module.exports = require(\"@toruslabs/openlogin-ed25519\");"],"sourceRoot":""}