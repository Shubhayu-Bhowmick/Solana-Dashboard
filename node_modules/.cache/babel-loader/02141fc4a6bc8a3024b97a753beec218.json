{"ast":null,"code":"import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\"\n};\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\n\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\n\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\n\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      this._syncState(await this._getData());\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };","map":{"version":3,"sources":["../src/constants.ts","../src/loglevel.ts","../src/utils.ts","../src/Modal.ts","../src/MemoryStore.ts","../src/OpenLoginStore.ts","../src/Provider.ts","../src/OpenLogin.ts"],"names":["modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","CYAN","DEVELOPMENT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","loglevel","resolve","document","htmlToElement","html","template","window","trimmedHtml","appKeyBuf","Buffer","appKey","base64url","getPublic","sig","sign","keccak","replaceUrl","result","url","key","queryResult","queryParams","JSON","safeatob","Object","log","hash","hashUrl","hashResult","hashParams","cleanUrl","reject","closedByHandler","closedMonitor","setInterval","windowRef","clearInterval","handler","ev","pid","id","query","h","constructURL","storageExists","storageLength","storage","x","error","sessionStorageAvailable","storageAvailable","localStorageAvailable","openloginIframeHtml","getPopupFeatures","dualScreenLeft","dualScreenTop","w","width","height","systemZoom","left","Math","top","features","handleStream","handlerWrapper","chunk","handle","Modal","constructor","modalUrl","init","setupStream","setupMultiplex","name","target","targetWindow","targetOrigin","origin","verifierStream","initIFrame","documentReady","documentIFrameElem","initialized","_showModal","style","k","_hideModal","_prompt","modalHandler","cb","loginConfig","cleanup","iframeElem","MemoryStore","getItem","setItem","OpenLoginStore","getInstance","toJSON","resetStore","currStore","getStore","get","store","set","iframeUrl","JRPCConnection","createStreamMiddleware","pump","rpcEngine","createIdRemapMiddleware","_rpcRequest","payload","randomId","preloadIframe","provider","deleteProperty","options","modal","initState","no3PC","_iframeUrl","_startUrl","_popupUrl","redirectUrl","uxMode","replaceUrlOnRedirect","originData","whiteLabel","privKey","network","startUrl","popupUrl","clientId","support3PC","Promise","_syncState","getHashQueryParams","res","state","updateOriginData","filteredOriginData","getWhitelist","getWhiteLabel","_fastLogin","defaultParams","loginParams","params","fastLogin","method","allowedInteractions","login","_selectedLogin","loginProvider","logout","logoutParams","request","session","userData","timestamp","Date","setTimeout","baseURL","b64Params","jsonToBase64","_pid","_method","u","awaitReq","_jrpcRequest","Array","getRpcPromiseCallback","_check3PCSupport","_originData","_setPIDData","data","_getData","newState","_modal","selectedLoginResponse","merge","_cleanup","encrypt","decrypt","getUserInfo","storeData","userInfo","email","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","dappShare","getEncodedLoginUrl","dataObject","_clientId","_origin"],"mappings":"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","sourcesContent":["import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\n\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\"\n};\n\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      this._syncState(await this._getData());\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };\n//# sourceMappingURL=openlogin.esm.js.map\n"]},"metadata":{},"sourceType":"module"}